// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../vendor/create-dmg/LICENSE (1.088kB)
// ../../../vendor/create-dmg/README.md (3.575kB)
// ../../../vendor/create-dmg/builder/create-dmg.builder (516B)
// ../../../vendor/create-dmg/create-dmg (12.452kB)
// ../../../vendor/create-dmg/sample (506B)
// ../../../vendor/create-dmg/support/brew-me.sh (697B)
// ../../../vendor/create-dmg/support/dmg-license.py (6.279kB)
// ../../../vendor/create-dmg/support/template.applescript (1.828kB)

package bindata

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _license = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x51\x4f\x8f\xa3\x36\x14\xbf\xfb\x53\xfc\x34\xa7\x19\x89\x4e\xa7\xab\x1e\xaa\xde\x3c\xe0\x04\xab\x60\x47\xc6\xd9\x34\x47\x02\xce\xe0\x8a\xe0\x08\x3b\x1b\xe5\xdb\x57\x8f\x64\x76\xbb\x3d\x21\xfc\xde\xef\xef\xb3\x83\x43\x2d\x2d\x2a\xdf\xb9\x29\x3a\x3c\xd7\xd2\xbe\x30\x96\x87\xf3\x6d\xf6\x1f\x43\xc2\x73\xf7\x82\x2f\x6f\x6f\x7f\xfc\xf2\xe5\xed\xb7\xdf\xc1\xa7\x7e\x76\x37\xd8\x76\x6e\xa7\x14\xc3\x37\xc6\x36\x6e\x3e\xf9\x18\x7d\x98\xe0\x23\x06\x37\xbb\xc3\x0d\x1f\x34\x76\x7d\x86\xe3\xec\x1c\xc2\x11\xdd\xd0\xce\x1f\x2e\x43\x0a\x68\xa7\x1b\xce\x6e\x8e\x61\x42\x38\xa4\xd6\x4f\x7e\xfa\x40\x8b\x2e\x9c\x6f\x2c\x1c\x91\x06\x1f\x11\xc3\x31\x5d\xdb\xd9\xa1\x9d\x7a\xb4\x31\x86\xce\xb7\xc9\xf5\xe8\x43\x77\x39\xb9\x29\xb5\x89\xf4\x8e\x7e\x74\x11\xcf\x69\x70\x78\x6a\x1e\x88\xa7\x97\x45\xa4\x77\xed\xc8\xfc\x04\x9a\x7d\x8e\x70\xf5\x69\x08\x97\x84\xd9\xc5\x34\xfb\x8e\x38\x32\xf8\xa9\x1b\x2f\x3d\x79\xf8\x1c\x8f\xfe\xe4\x1f\x0a\x04\x5f\x6a\x88\x2c\x05\x5c\xa2\xcb\x16\x9f\x19\x4e\xa1\xf7\x47\xfa\xba\x25\xd6\xf9\x72\x18\x7d\x1c\x32\xf4\x9e\xa8\x0f\x97\xe4\x32\x44\x7a\x5c\x5a\xcd\x28\xc7\xaf\x61\x46\x74\xe3\xc8\xba\x70\xf6\x2e\x62\xc9\xfa\xc3\xdd\xb2\x43\xd6\xcf\x54\x68\x7a\x54\x14\xe9\xe5\x3a\x84\xd3\xcf\x49\x7c\x64\xc7\xcb\x3c\xf9\x38\xb8\x05\xd3\x07\xc4\xb0\x28\xfe\xe3\xba\x44\x2f\xb4\x7e\x0c\xe3\x18\xae\x14\xad\x0b\x53\xef\x29\x51\xfc\x93\x31\x3a\x79\x7b\x08\xdf\xdc\x92\xe5\x7e\xe5\x29\x24\xdf\xdd\xeb\x5e\x0e\x70\xfe\x71\xd5\xc7\x28\x0e\xed\x38\xe2\xe0\x1e\x85\xb9\x1e\x7e\x42\xfb\x9f\x38\x33\xc9\xc7\xd4\x4e\xc9\xb7\x23\xce\x61\x5e\xf4\xfe\x1f\xf3\x95\x31\x5b\x0a\x34\x7a\x65\x77\xdc\x08\xc8\x06\x1b\xa3\xbf\xca\x42\x14\x78\xe2\x0d\x64\xf3\x94\x61\x27\x6d\xa9\xb7\x16\x3b\x6e\x0c\x57\x76\x0f\xbd\x02\x57\x7b\xfc\x25\x55\x91\x41\xfc\xbd\x31\xa2\x69\xa0\x0d\x93\xf5\xa6\x92\xa2\xc8\x20\x55\x5e\x6d\x0b\xa9\xd6\x78\xdf\x5a\x28\x6d\x51\xc9\x5a\x5a\x51\xc0\x6a\x90\xe0\x83\x4a\x8a\x86\xc8\x6a\x61\xf2\x92\x2b\xcb\xdf\x65\x25\xed\x3e\x63\x2b\x69\x15\x71\xae\xb4\x01\xc7\x86\x1b\x2b\xf3\x6d\xc5\x0d\x36\x5b\xb3\xd1\x8d\x00\x57\x05\x94\x56\x52\xad\x8c\x54\x6b\x51\x0b\x65\x5f\x21\x15\x94\x86\xf8\x2a\x94\x45\x53\xf2\xaa\x22\x29\xc6\xb7\xb6\xd4\x86\xfc\x21\xd7\x9b\xbd\x91\xeb\xd2\xa2\xd4\x55\x21\x4c\x83\x77\x81\x4a\xf2\xf7\x4a\xdc\xa5\xd4\x1e\x79\xc5\x65\x9d\xa1\xe0\x35\x5f\x8b\x05\xa5\x6d\x29\x0c\xa3\xb5\xbb\x3b\xec\x4a\x41\x4f\xa4\xc7\x15\x78\x6e\xa5\x56\x14\x23\xd7\xca\x1a\x9e\xdb\x0c\x56\x1b\xfb\x1d\xba\x93\x8d\xc8\xc0\x8d\x6c\xa8\x90\x95\xd1\x75\xc6\xa8\x4e\xbd\xa2\x15\xa9\x08\xa7\xc4\x9d\x85\xaa\xc6\x4f\x17\xd1\x66\xf9\xdf\x36\xe2\x3b\x21\x0a\xc1\x2b\xa9\xd6\x0d\x81\x29\xe2\xe7\xf2\x2b\xfb\x37\x00\x00\xff\xff\x78\x07\xbb\x20\x40\x04\x00\x00")

func licenseBytes() ([]byte, error) {
	return bindataRead(
		_license,
		"LICENSE",
	)
}

func license() (*asset, error) {
	bytes, err := licenseBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "LICENSE", size: 1088, mode: os.FileMode(0644), modTime: time.Unix(1572713988, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7a, 0x1e, 0xa, 0x4d, 0xf, 0xe, 0xe3, 0x22, 0x68, 0x1e, 0x6, 0xd3, 0x45, 0x5c, 0x95, 0x5e, 0x2d, 0x8d, 0x82, 0x4, 0xbb, 0x68, 0x44, 0xbd, 0xf1, 0x81, 0x36, 0x78, 0xd3, 0x48, 0xf3, 0xb2}}
	return a, nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x57\x6d\x6f\xdb\xc8\x11\xfe\xce\x5f\x31\x75\x81\x9c\x2d\x98\xa2\x6d\xb4\x81\xcf\x40\x81\xa6\xb8\xbe\x1c\x90\x43\xd0\xa6\x41\xd1\xd2\x46\xb2\xe2\x8e\xc8\x89\x96\xbb\x9b\xdd\xa1\x25\xe5\xd7\x17\xb3\x4b\x91\x92\x63\xa7\x57\x03\x26\x24\xce\x33\xcf\xbc\xec\xec\xcc\xa8\x09\xa8\x18\x4b\xdd\xb7\xc5\x1f\xa6\xbf\xa2\x78\x03\xb1\x43\x63\x20\x36\x81\x3c\x03\x3b\x58\x0d\x64\x34\xac\x95\x6d\xf6\xf0\xd3\x2f\x7f\x8d\xcb\xa2\x28\xde\xb3\xe2\x21\x82\xb2\x1a\x1a\x67\x39\xd0\x6a\x60\x72\x16\xbc\x33\xd4\xec\x8b\xf2\xbb\x7f\x45\xf1\xcf\x8e\x22\xf8\xe0\x3e\x63\xc3\x40\x11\x7a\x45\x96\x15\x59\xd4\xc0\x9d\xb2\x9b\x28\x76\xb9\xc3\x99\xdc\x85\x08\xdb\xce\x41\x44\xab\xc1\x0f\xc6\x40\xc0\x2f\x03\x46\x8e\x97\xc9\x0b\xeb\xb6\x70\xfe\x1e\x3d\xdc\x5c\x5d\xdf\x5e\xc0\x96\xb8\x4b\x04\x1d\x1a\x0f\x6e\x0d\xf5\x1f\x95\xb3\xf8\xf5\xe1\xbc\x63\xf6\xf1\xae\xaa\x5a\xe2\x6e\x58\x2d\x1b\xd7\x57\x49\x72\xb1\x2c\x8a\x7f\x21\x6c\xc9\x18\xe8\x31\xb4\x08\xca\xee\x4f\x2c\x89\x6b\x0c\x4a\xeb\x08\xd1\xf5\xc8\x1d\xd9\x16\x86\x88\xeb\xc1\x24\x17\xb4\xc3\x08\xd6\x31\xac\x02\xaa\x0d\xe0\x8e\x22\x0b\x24\x01\x47\x37\x13\xbd\x5b\x33\x5a\x68\x83\xb2\x0c\x8d\xeb\x7b\x62\x50\x4d\x83\x71\x8a\x3a\xa0\x77\x91\xd8\x85\xfd\xb2\x28\x7e\x5e\xc3\xde\x0d\x3f\x04\x71\x08\x54\xc3\xf4\x88\x62\x35\x64\x3e\xe1\x90\x33\x42\x50\x73\x16\xc3\x25\xb8\x00\x9f\x87\xc8\x13\xa0\xe9\x14\x5f\x82\x37\xa8\x22\x82\xcf\x9e\x83\x62\xa8\x5b\x62\xc6\xb0\xa4\xbe\x9a\x0b\xa2\x7a\xeb\x56\xab\xfd\x49\xae\x5e\xc0\x48\xd6\x8a\x9f\x6d\x64\x65\x8c\x92\x0a\x28\x4e\x0f\xba\x84\x7f\xbb\x01\x1a\x65\x81\x32\x48\xb2\x11\x0f\xc5\x35\x44\x71\xa4\xfe\x9b\xeb\x71\x15\x70\x3b\x1b\x94\x6f\xcb\xd8\x5d\xdc\x15\x05\xc0\xa7\x4f\x9f\x62\x57\x80\xa4\x75\x3b\xd1\x1c\x55\x6f\x42\x1c\x9b\xd2\x6e\x6b\x8d\x53\x3a\xe5\xb2\x36\x8a\xe5\xf0\x02\xa6\xd8\x9f\x2f\x00\xab\x03\xee\x1f\x89\x8f\xe3\x1b\x15\x62\x95\x09\x2e\x8e\x2d\x28\x13\x1d\x34\xc6\x59\x4c\x36\xd0\x32\x85\xe3\x63\x3b\xf1\xbb\x25\x1e\xb1\xbf\xd2\xf4\xb2\x25\x3e\x44\xf5\x21\xaa\x16\x8b\x31\x9b\x99\x71\x06\x42\xed\xbc\x24\x3d\x2e\x97\xcb\x07\xa8\xdd\xc0\x7e\xe0\xfb\x8f\x56\xf5\xb8\xd4\x7d\xfb\x00\x75\x74\x43\x68\xf0\xfe\xe3\xda\x19\x8d\xe1\xa1\x48\x9c\x6f\x24\x7f\xce\x32\x5a\x8e\x72\x37\x4e\x41\xb9\x46\x57\x72\xf7\x3c\xa1\x06\xb2\x63\x55\x6a\x8a\x1b\xa0\x5e\xb5\xb8\x2c\x8a\xc5\xe2\x5d\x36\x7d\xb7\x58\x14\xc5\x02\x00\x16\x8b\xb2\x7c\x74\x46\x8c\x43\x2d\xcf\x87\xbb\xc5\x02\x22\x32\x3c\x3a\x33\xf4\x08\x49\x72\xae\x29\x7a\xa3\xf6\x89\x38\xd1\xfe\x85\xac\x58\x8d\xa4\x71\xa5\xc6\xaa\x26\xab\xdd\x16\x98\xd8\xe0\xc5\x31\x39\x35\xce\x42\x2d\xcf\x25\x35\x36\x3e\xb5\x20\x82\x09\xbe\x52\xcd\xa6\x0d\x6e\xb0\x1a\x6a\x4f\xcd\xd2\xdb\x76\xc2\x8f\x91\x1e\x41\x52\x5c\x70\xee\x83\x7b\x24\x8d\xe0\x6d\x7b\x09\x2d\xad\x2f\xe1\xb3\x6f\x67\x17\xb2\x63\xa5\x77\x11\xea\x1d\xec\x27\xbe\x74\xee\xd2\xff\x24\xa0\x29\x8d\x82\x7d\xaa\x1a\xe9\x2b\x42\xbd\x25\xcd\x1d\x74\x48\x6d\xc7\x13\x49\x12\xb9\xf5\x77\x38\x18\x77\x3c\x32\xc8\xc7\xa4\x31\xa9\x1f\x92\x76\x10\xc0\xf9\xf5\x55\x79\xfd\x7a\x76\x5e\xb2\x33\x6a\xa7\x3c\x3e\xa7\x2d\x82\x38\xaa\x0f\x5e\x1a\xc7\xf5\xcd\xed\x29\x05\xd4\x6b\x32\xf9\x34\x1f\x5e\xc8\xc2\x21\x08\x32\xf8\x43\x3c\x3d\x95\x8e\x34\x96\xb8\x63\xb4\x91\x4e\xb9\x84\x45\xa4\xf9\x46\x4d\x08\xb7\x4e\x3c\x13\x41\x33\x44\x76\xfd\x37\x9e\x54\x75\x16\x24\x6b\x0f\x55\x1d\x55\xef\x4d\x76\xe1\x25\x2f\xd3\xf0\x9a\x95\x26\x0b\xca\xfb\x52\x07\xe7\x4b\x43\x76\x33\xeb\xf6\x6a\x23\x4d\x56\x24\x90\x24\xec\xe0\x8d\xf7\x86\x9a\xd4\xf8\xa4\xc1\x33\x18\x97\xbf\xc1\xee\x12\xf6\x13\xe3\x17\xf3\x6b\x09\xab\xb7\xb4\x0a\x2a\xec\xab\xbf\x0f\xd4\x6c\xde\x3a\xb7\xf9\x0e\x2d\x0e\x46\x41\x9d\x9e\x29\x4e\x21\x55\xcc\xaa\xe9\x40\x81\xa1\x06\x6d\xcc\x19\x38\xcc\x15\xe9\x96\x07\xe5\x80\x5f\xa1\x96\x87\x57\xdc\xe5\xe4\x78\x6c\x68\xbd\x3f\xe4\x44\xde\x8b\xe2\x3f\xf0\x2b\xb0\x73\x46\x86\x8e\x96\x17\x64\x1b\x33\x68\x3c\xb1\x30\xd1\x5a\x57\x92\x65\x0c\x16\xb9\x44\xab\x56\x06\x85\x5a\x53\x94\x8f\xa0\x06\x76\xbd\x62\x6a\xa0\x77\x83\xe5\x57\x8d\xf3\x73\x38\x6b\x17\x7a\xc5\xc7\x9e\xe4\x22\xb2\xca\x8c\xd7\x33\x23\xe0\x5c\xe3\x5a\x0d\x26\x6d\x0e\x1f\x7e\xfa\xcf\xbb\xb9\x3e\x95\xd6\x65\x0a\xb8\x66\x15\x5a\xe4\x43\x95\x1e\x62\xc9\x9d\xee\x69\x55\x28\xad\xe5\x3f\x55\x85\x32\x39\x63\xe7\xb9\xb3\xa6\x6e\xbf\xc2\x1c\x7b\x3f\x18\x26\xa9\x2a\xa6\x1e\xe3\x13\xab\xf9\xc2\xfe\x0f\xbb\xb9\x0b\xbf\x6c\x39\x93\xfc\x3f\xb6\xa5\x29\x97\x29\x3b\xe3\xd5\xde\x4d\x85\x7e\xda\xb3\xf3\xa5\xee\x95\x1d\x94\x31\x7b\x71\x6a\x07\xbf\xfc\x69\xbe\x97\x9a\x06\x26\x53\x3e\x62\x58\xb9\x98\x0e\x0d\x77\xd8\x0c\x8c\x30\x8a\xa4\x5f\x8f\x52\xe8\x9d\xc6\x6f\x54\xbf\x0c\x84\xfc\x82\x62\x92\x9d\xaa\x45\x65\xf5\xca\xed\xca\xa8\xd6\xcf\x9a\x4b\x2b\xdc\x08\x92\x35\xc9\x2b\xa6\x15\x19\xe2\xfd\xb8\x6d\xd9\xbc\x6c\x19\x8c\x71\x9e\x11\x18\xa4\x6b\xa4\x14\x74\xd2\x0d\xa5\x70\xc7\x97\x60\x87\x7e\x85\xe1\x80\xed\x2e\xa1\x2c\x65\x3d\x1c\x0b\x54\xa6\xd2\xb4\x32\x16\x45\xf1\xe7\x5d\x6a\x21\xc5\xb4\xcb\xe4\xe9\xfb\xdb\xdf\x54\x2b\xb2\x55\xec\x8a\xb4\x56\x94\xeb\xe3\x26\x50\x8e\xab\x10\x06\x99\xbf\xf0\xea\x15\x84\xfe\x65\xf9\xf1\x24\xbf\x2f\xe6\xe9\x79\x76\xa4\x01\x93\xc6\xd9\x01\x93\x5a\xdf\x99\x9a\x31\xf7\x1f\xa7\x89\x98\x41\x47\x73\xed\x8c\x0e\xfa\xf7\x1f\xe7\xd7\x32\x0c\x33\xf4\x68\xa2\xdd\x5c\x5d\xc1\xf5\xcd\xd5\xf1\xeb\x54\x33\xb7\x57\x57\xf0\xbb\xab\xfc\x7e\x9e\x21\xd7\x47\x6f\x4e\x3c\x5e\x2a\xef\xcf\x32\xd9\x8f\x19\xf2\xa4\xe7\x7f\x0b\x16\xd0\x69\xd7\x7d\x2d\xea\xb7\xbf\x87\xfb\xe2\xec\xc5\xf4\x89\xde\x59\xbe\x59\xe3\xea\x52\x9d\x1d\x16\x1c\xe9\x40\x4a\x56\xe5\xf8\x64\x21\x5d\x40\x6d\x9d\x46\x31\x27\x1b\xd2\x73\xdb\xe0\x5b\xb2\x43\xfc\x50\x1d\xc1\xe4\xba\xd5\xba\x6f\xd3\x2f\xa1\x59\xc7\xef\x3d\x2d\xfd\x9e\x3b\x67\x97\x2e\xb4\xe9\x7b\x75\x80\x89\x4e\xc4\x3c\xcd\xea\xf7\xac\x9a\xcd\xbb\x47\x0c\x6b\xe3\xb6\x90\x7e\x4d\x90\xb3\x99\xe9\xae\xaa\xa2\x88\xdd\x28\x4e\x3e\x1c\x20\xb1\xfa\xf1\xf5\xed\xed\x4d\xd5\xb9\x6d\xa9\x5d\x49\xe5\x58\x32\xaa\xb4\xd4\x60\x69\x9c\xdb\x90\x6d\xa5\x82\xa4\x7d\x96\xbd\x6a\x4a\x17\xcb\x5d\x99\x36\xeb\x52\x7e\x5c\x28\xab\x25\xa5\x58\xca\x55\x88\x17\xc5\x7f\x03\x00\x00\xff\xff\x2e\x13\xa9\x6e\xf7\x0d\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 3575, mode: os.FileMode(0644), modTime: time.Unix(1572713988, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9e, 0xc8, 0xca, 0xc6, 0x13, 0x2b, 0x80, 0x94, 0x3d, 0xb8, 0xd, 0x2e, 0x81, 0xcd, 0x9f, 0xe, 0x3d, 0xc9, 0x96, 0xfb, 0x6c, 0x4d, 0x58, 0xf7, 0x42, 0x97, 0x1d, 0x99, 0x34, 0x21, 0xb6, 0x7c}}
	return a, nil
}

var _builderCreateDmgBuilder = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x6a\xc3\x30\x10\x84\xcf\xbb\xef\x91\xa3\x93\x43\xaf\xa5\xd0\x1f\x17\x0c\xc5\x36\xb6\x92\xd2\x1a\x51\x94\x68\xed\x0a\xa4\x5a\x48\x32\x84\x3c\x7d\xc1\x22\x8d\xdc\x86\x1e\x35\xfb\xcd\xec\x68\xdb\x9c\x81\xb0\xf6\xe3\x4b\x18\x82\x83\x23\x11\x28\x93\x66\x40\xdc\xe5\x4d\x5b\x54\x65\xa2\xad\x0f\x93\x4b\x9e\xf0\x49\x42\xfa\x8d\x11\x3e\x90\x43\x2c\xf3\xd7\xa7\xa2\x81\xfd\xa4\xb4\x5c\x4b\xe5\x20\x90\xb1\xb0\xca\x66\x01\xb2\x19\x78\x2e\x5e\xf2\x34\xf0\xa4\x2c\xf4\x24\xc2\xe4\x48\xc2\x6a\x7e\xae\x10\xf1\xb1\xaa\xdf\x58\x05\xdd\x4f\x16\x47\x28\x4a\x56\xa5\xcb\xbb\x65\x2f\xbe\x49\xba\x47\xd8\x0b\x63\x35\xfd\x05\xa3\x7e\x86\x26\x6b\x47\x17\xae\x50\x71\x80\x80\xed\xf6\xa1\x65\xbb\xfb\xa6\x4d\x0a\xdd\x0a\x1d\xc8\xdd\xa5\x5b\xa1\xeb\x38\x47\xc4\xf7\xa2\x5e\xa4\x9d\x94\x3d\xd7\x8f\xfe\xac\x57\x9a\x7c\x66\x1d\xf5\xea\xc8\x17\xbf\x44\xac\xb7\x0c\x0c\x0d\x62\x3f\x1e\xe3\xe5\xfc\xaf\x7b\x5d\x23\x62\x82\x1e\x87\xe8\xf7\x37\xff\x58\x2f\xc3\x8b\xeb\x3b\x00\x00\xff\xff\xda\x50\x2e\xe6\x04\x02\x00\x00")

func builderCreateDmgBuilderBytes() ([]byte, error) {
	return bindataRead(
		_builderCreateDmgBuilder,
		"builder/create-dmg.builder",
	)
}

func builderCreateDmgBuilder() (*asset, error) {
	bytes, err := builderCreateDmgBuilderBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builder/create-dmg.builder", size: 516, mode: os.FileMode(0644), modTime: time.Unix(1572713988, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x45, 0x19, 0x22, 0x65, 0xf3, 0x99, 0x89, 0x73, 0x97, 0xd7, 0xcb, 0x8f, 0x52, 0xdf, 0x52, 0x7f, 0x54, 0x38, 0x3f, 0xee, 0x5f, 0xfc, 0xda, 0x21, 0x63, 0x94, 0xf9, 0x7, 0xd3, 0x15, 0x6d, 0x60}}
	return a, nil
}

var _createDmg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\xef\x76\xdb\xb6\x92\xff\x2c\x3e\xc5\x94\xe1\xa9\xad\xd6\x94\x2c\xb7\xcd\xed\xc6\x51\x76\x65\x4b\xb1\xb5\xb1\xe5\x5c\xc9\x6e\xd2\x26\x59\x05\x22\x21\x09\x57\x24\xc1\x12\xa0\x6d\xc5\xd1\x39\xfb\x1a\xfb\x7a\xfb\x24\x7b\x06\xe0\x7f\x51\x76\xba\xbb\x1f\x6e\xce\x89\x25\x81\xf3\x1f\xc0\xcc\x0f\x03\x3e\xfb\xae\x3d\x63\x41\x7b\x46\xc4\xd2\x30\x9e\xc1\x69\x44\x89\xa4\x40\x20\xa2\xc4\xb5\x79\xe0\xad\xc1\x65\x62\x05\xcc\x27\x0b\x0a\x7c\x0e\x72\x49\xc1\xe1\x81\xa4\x81\x14\xf8\x9b\xc0\x9c\x7b\x2e\x8d\x0c\x43\x50\x09\x36\x3d\x36\x8c\x79\x1c\x38\x92\xf1\x00\xc2\x38\xa2\xd3\x5b\x1a\x09\xc6\x83\xfd\x26\x3c\x18\x0d\xea\x2c\x39\xec\x75\x5a\x87\xad\xc3\xd6\xf3\x3d\x63\x53\x20\xde\xa6\x33\x1d\x65\x8c\xed\xfa\x0b\xb0\xf6\x8b\xc2\x9a\x66\x89\x35\x16\x64\x41\x35\x63\x42\x90\x4a\xd0\xee\x08\xb4\x92\x04\xce\x1a\xfa\x97\x67\x30\x67\x1e\x6d\x99\x29\xc5\x0d\xf2\xbe\x00\xb0\xf6\x67\x44\xd0\x80\xf8\x14\xac\xc3\x26\x7c\xe0\x21\x8a\x16\x9f\xe0\x25\x8f\x65\x18\xcb\x29\x3e\x6a\xb9\xfe\xe2\x15\xbc\x14\x3c\x8e\x1c\x3a\xd5\x8e\xbf\xca\x44\xf5\x3c\xaf\x14\x9a\x12\x19\xdc\x31\xcf\x83\x19\x06\x2f\x64\xd4\x05\x16\x48\xae\x82\x99\x87\x37\x37\xea\x4a\x2b\x7f\x91\x0d\x00\xd8\xf6\x2d\xf7\x94\x79\xf8\xa7\xf0\x00\xff\x61\xe8\x6f\xb9\x17\x27\x4f\x61\xdf\x65\x22\xf4\xc8\x5a\xe9\x51\x5a\x5e\xb3\x00\x8d\x10\xcc\xa5\x33\x12\x01\x09\x5c\xb8\x63\x81\xcb\xef\x40\x32\xe9\xd1\x66\x55\x13\x73\x78\x00\xf8\xa7\xc5\x9c\x40\xec\x56\x87\x24\x25\xde\x19\x71\x56\x8b\x88\xc7\x81\x0b\x21\x73\x5a\x61\xb0\xa8\x61\x4e\x42\x52\xa0\xd5\xeb\x6b\x3f\x8c\xf8\x2d\x73\x29\x84\xc1\xe2\x00\x16\x6c\x7e\x00\xff\x08\x17\x65\xe3\xb4\xd9\x76\xc8\x05\xdc\xc3\xba\x46\x78\xc8\x05\x53\xcb\x02\xfd\xce\x82\x8f\x4c\x75\x72\x04\xfb\x42\xe1\x8e\xb9\x72\x09\x4b\xca\x16\x4b\x59\x23\x51\xd1\x24\x6b\x7f\xb7\x40\x49\xef\xa5\x16\x87\xdf\xa6\xf8\xad\x46\x56\x1a\x75\x7a\x9f\xc8\xdd\xef\x1c\xda\x9d\xe7\x65\x1f\x31\xaa\x5a\x14\x7e\x7b\x42\x14\x92\x88\x44\x56\x1c\x82\xe4\xd0\x39\xfa\x75\x5b\x9e\x5a\xf7\x6a\x15\x3f\x15\xb7\xd4\x53\xe6\xd1\x3d\xb1\x3d\xc3\x4b\xe6\x52\x9b\xde\x4b\x1a\xe0\x4e\xcb\xc5\x56\x44\x22\x99\x92\x93\x93\xf2\xb9\xa2\x2e\x49\x73\x62\x21\xb9\x5f\xb5\x50\x8f\x4e\x95\xf7\x3c\x9a\x0a\xe2\x87\x1e\x9d\xe2\xf3\xa7\x8c\xc7\x95\xad\xb9\xb7\x2d\x27\x61\x68\xbb\x11\x0f\x6d\x8f\x05\xab\x1a\x41\x3e\x59\x61\xea\x43\x12\x50\x24\x92\x43\x2f\x0c\x3d\xe6\x10\xb5\x1f\x0f\x80\x48\xf0\xb8\xfe\x05\xf7\x07\xeb\x92\xf4\x3f\xbd\xbf\x2c\x3c\x16\x34\x82\xbf\xc7\xcc\x59\x5d\x70\xbe\x02\x16\x08\x49\x3c\x0f\x5c\x16\x3d\xae\x8a\xc6\x1e\x01\xfc\x33\xad\xc4\x13\xff\x11\x29\x89\xb3\x04\x02\x1e\x73\x68\x20\xf4\x44\x42\x9a\x6d\xfc\x45\x49\x52\xc0\x6d\x16\x48\x1a\x05\x54\xda\x34\x20\xb3\x2d\x69\x2e\x13\x38\x0a\x24\x96\xdc\x27\x92\x39\xe0\xf3\x38\x90\xdf\x3b\x3c\x2c\xdb\x34\xe7\x91\x4f\xb6\x76\x4f\x48\x1d\x36\x5f\x27\xeb\x29\x20\x5e\xb2\xd1\x35\x31\xec\xbb\x74\x4e\x62\x4f\x02\x13\x70\xd3\xff\xe3\xaa\xbc\x6a\x89\xeb\xda\xda\x76\x12\x2d\xa8\xce\xc0\x10\x12\xb9\x9c\x4a\x3e\x4d\x93\x6b\xfd\x92\x20\xae\x8b\xff\xd5\x92\x20\x9e\x8e\xc0\xbe\x4e\xe9\xe0\x90\x00\xf3\x70\x2c\xa8\x0b\x7e\xec\x49\x16\xa2\x0a\xe6\x53\x51\xa3\x5e\xef\xf6\xc7\x0c\xd0\x14\x4f\x9b\xa0\xe9\xfe\xaa\x11\x58\x1d\x6c\x15\x33\x9d\x0f\xee\x6b\xd6\x7e\xb9\x8a\xe8\x4c\xe0\x93\x20\x26\x9e\xb7\xc6\x79\xbf\x87\xcb\x93\xf2\x0e\x76\x59\x2c\x99\x67\xdf\xd2\x68\xc6\x45\x75\xc6\xe9\x3d\x75\x62\x49\x21\xa1\xc2\x0a\x92\x10\x82\xcf\x5d\x6a\x02\xd4\xc9\xfa\x33\x66\xb4\x3a\xfb\x35\x92\x14\x99\x96\x53\x94\x22\x48\xe0\xce\xf8\xbd\x2d\xc8\xfc\x29\x73\xee\x98\x5c\x42\x42\x0f\x0e\xf7\x43\x22\xd9\x8c\x79\x4c\xae\xd5\xde\x77\x39\x04\x5c\xc2\xcc\xa3\x42\x94\x54\x44\xf4\x0b\x44\xf4\xcb\x14\xe7\xaf\xa2\x22\x16\x69\xc6\x51\xb3\x8b\x31\x1b\xd3\x2f\x20\x39\xf7\xca\x75\x51\x83\x0b\x48\xff\x89\x25\x66\x72\xce\xbd\x14\xbc\x40\x10\xfb\x33\x1a\x15\x99\x96\x07\x18\x24\xea\x85\x29\x53\x52\x9a\x41\x2e\x99\x00\x7c\x80\xd4\xf7\x4c\xc2\x21\x62\x9a\x77\xc3\xd1\xfb\x6e\xe7\x10\x3f\x7f\xef\x3e\x57\x9f\xef\xba\xbf\x1c\xaa\x2f\xe7\xdd\x9f\x7e\x39\x34\x86\xa7\x57\xa3\xe9\x64\xf8\xc7\xa0\xdb\x39\xfa\xd5\xb8\x1e\xbc\xbf\x4e\x7e\x3d\x37\x5e\x5f\x8d\x2f\x7b\xd7\x5d\x13\xb7\x92\x69\xf4\xfa\xfd\xe9\xeb\xe1\xc5\x60\x3a\xb9\xba\x19\x9f\x0e\x26\xdd\xfd\x66\x3e\x76\xdd\x1b\x9f\x0d\xae\xf3\xb1\xab\x8b\xfe\x60\xbc\x45\xa9\x47\x0b\xb4\xc3\xcb\xde\xd9\xe0\xcd\xe0\xf7\xae\x69\x1a\xe7\xfd\xe1\xcd\xf5\xf0\x62\xfa\xdb\x60\x7c\x72\x35\x19\x5e\xab\xc1\x49\x6f\xd4\x3f\xb9\x7a\x3f\x9d\xf4\x5e\x0f\xba\x87\xc6\xe4\xcd\xf0\xed\xf4\xdf\x07\xa3\x37\xc3\xd1\xa4\x7b\x68\x18\x77\x4b\xb5\x9f\xa9\x90\x60\x5a\x0f\x9d\x17\x87\x2f\x3a\x1b\x13\xba\x60\xda\xe6\x31\xb8\xdc\x68\x38\x44\x50\xb0\x3a\xc0\x02\xa3\x91\x41\x9e\xa6\xd1\x68\xfc\x76\x75\x71\x73\x39\x98\x8e\x7a\x97\x83\xae\x69\x1d\x99\x46\xa3\x21\x96\x6c\x2e\x8f\x41\x7f\x1c\x27\xf4\x98\xf4\x0b\xf4\x2a\x5a\xe8\xf1\x6e\xa6\x1c\x85\x20\xdf\x49\xef\xf4\xcd\xd9\xf8\xea\x66\xd4\x2f\xb1\x55\x86\x53\x3b\x0a\xa0\xb1\x42\xd1\xac\x70\x9d\x5e\xf4\x6e\x26\x83\xae\x89\x1b\xb6\x8c\x91\x64\x1c\x29\x74\xc1\x43\x29\x70\xe9\xa9\x64\xf5\xd1\x6c\xe5\x54\x2f\xaa\xc2\x95\xfa\x8f\x26\xaa\x18\x0f\xde\x62\xf0\x87\x57\xa3\xe9\xf9\xb0\xdf\x1f\x68\x6f\x27\x25\x7d\xc5\xca\x4e\x6f\x69\xb4\x06\x26\xa9\x8f\xba\x1e\xe4\x92\x9e\x70\x29\xb9\x3f\x46\xec\xf3\x1e\x7e\x84\xce\xe1\xe1\x01\xfe\xd9\xd4\x47\x2b\x83\x26\x18\xac\x7c\x2d\xee\x8c\x6e\x86\x8a\x90\x3e\x5f\xad\x3b\xe9\x73\x78\x87\x0c\x6a\x3b\x58\x47\xc7\xa0\xf6\x83\xf5\x53\x95\xa5\x86\x33\xd5\xa5\x76\x4e\xc2\x7a\xfe\x04\x6b\xba\x68\xb2\x50\xa6\xd1\xb3\x1e\x2a\x43\x9b\x6a\x3c\x55\x24\x3f\x9a\xd6\xd1\x47\x53\x05\xd4\xfa\xe9\x00\xac\x9f\x37\x46\xa3\xb1\xe5\x5f\x8d\xe2\x32\x96\x42\x13\xce\x87\xfd\xe1\xe8\xac\x60\x40\x69\x60\x93\xe6\xfb\x1c\x54\x2d\x99\xeb\xd2\x3a\x53\x64\x14\xd3\x3a\x33\x94\xe2\x02\xec\x6a\x3e\x6e\x67\x81\x6b\x09\x5f\x93\x64\x86\x3c\xea\xd4\x95\xec\xbb\xe4\x58\x66\x34\xd2\x03\xd8\x31\xe8\x9c\xa6\x9f\xe3\xd9\xad\x48\x54\x3c\xcb\x95\x29\x8b\x20\x0a\x29\xff\x7e\x31\xbd\x18\x8e\xde\x74\xad\x23\xfd\x63\xd7\xb2\x4e\x7c\xcf\xb0\x54\x3a\x1b\x47\x07\x60\xfd\xf4\xd8\x6c\x28\xad\x25\x60\x88\x6a\x7b\x6f\xdf\x5e\x0c\x4f\x7b\x6a\xe2\x73\xfd\xc5\xd1\x27\x0c\x29\xc2\xc6\xbf\x66\x0b\xc2\x3a\x34\x61\x70\x73\xd1\x9b\x8e\x27\xe3\x53\xad\x7b\x9b\x70\x1b\xba\x21\xdb\xe8\x6a\x38\xba\x1e\x8c\x47\x83\xeb\x6e\x27\x63\x53\xf4\x1a\x73\x21\x4d\x5a\x27\x76\xed\xc1\x14\x78\xa9\x48\x54\x2a\xc6\x8f\xdd\x7d\xe4\x2b\x3d\x4a\xca\x86\x7a\xf4\x93\xf9\x8d\x1b\x09\x35\x3f\xb5\x97\x7e\x3e\x00\xeb\x97\x6f\xd8\x4b\x5b\xc6\x2b\xb0\x95\xd9\x58\x2a\x63\x55\x07\x4a\x95\xef\x9f\xc3\x85\x0a\xe8\x43\x6b\xfa\xc3\xc9\x9b\xa9\xaa\xbe\x4f\xe4\xcf\x0a\xb6\x53\x29\x65\xab\x50\xef\xa5\x8f\xf7\xca\x4b\xa4\x04\xe6\x76\xb1\xaa\x87\x05\x46\x40\xce\x22\x80\x43\xc6\x12\x0e\xe8\x54\x88\x23\xfa\xa5\xa9\x4a\xd7\x1f\xd3\xb7\xbd\xeb\xf3\x5d\x0b\x5c\xac\x58\x68\xff\x83\x06\x2b\x16\xa8\x62\x50\x02\x13\xe5\xc5\xfd\x03\x3e\x4f\x1a\x3a\xc1\x2a\xe0\x77\x01\x24\x40\xdb\xea\xb4\x60\x1c\x07\x1a\x36\x26\x48\x6c\xce\x23\x85\xbc\x5a\x18\x42\x95\x7d\x3a\x28\x85\x0a\xe2\xa4\x08\x44\x6f\x11\x05\x43\xd4\xc1\x04\x8b\x5d\x86\x7d\xf4\xdc\xac\xe8\x1a\xbe\x78\x6c\x66\x7b\xf4\x96\x7a\xdd\x7f\x31\x51\xc6\x4d\xff\xe4\x8f\x5d\xc4\xb3\x2f\x2c\x3c\x2a\x51\x2b\x8d\x2e\x0f\xa8\x61\x28\x4c\x64\x7f\x01\x9c\x58\xf8\xfe\xfb\xbc\x09\x36\xe2\x12\x68\xc0\xe3\xc5\x12\x48\xb4\x88\x7d\x1a\x48\xd1\x82\x61\x70\xcb\x57\x74\xa7\x57\xda\x29\x04\x94\x93\xd3\xf1\xf0\xed\xf5\xb4\x3f\x1c\x23\x5c\x01\xc7\x05\xfc\x70\x59\xa4\x50\x8b\x69\x3d\x9c\xf4\x26\xe7\xc9\xf2\xff\x70\xf8\x69\x63\x42\x53\xe9\x0f\xef\x5c\x68\x9a\x46\xff\xf2\x4c\xcf\x91\x69\x75\xf4\xaf\xfe\x70\x9c\x82\x9f\x5c\x4a\x4a\x66\x36\x33\x22\x24\x50\xda\x0a\x4c\x26\xbc\x82\xb6\x4b\x6f\xdb\x41\xec\x79\xc7\xa8\x23\xa1\xdf\x82\x53\xdb\x22\xaf\x07\x97\x6f\x53\xba\x44\x64\x3b\xba\x6b\x59\x0f\x29\xff\xc6\x34\x26\xe3\xd3\x64\x43\x67\xda\x8f\x6a\x75\x16\xc2\x5d\x00\x96\xca\xf1\x32\xd0\xac\xb5\x08\x5a\xae\xbf\x40\x29\xcf\x60\x16\xd1\x3b\x75\x9a\xc5\x13\xb9\x6a\xf1\xe9\x0a\xcd\x04\x10\x01\x1d\x75\x24\xa1\xfe\x8c\xba\xaa\x6a\x8b\x38\x0c\x79\x24\x41\x38\x11\x0b\xa5\x30\x4e\xc6\x83\x77\xd3\xe1\x68\x72\xdd\xbb\xb8\x40\x78\xdc\xbb\x79\x9f\x46\x3b\x9f\xb7\x76\xc2\x65\x1a\x06\x9b\xc3\x07\xb0\x8a\x5c\x60\xd3\x3f\xe1\x10\x3e\x1d\xa3\xfc\xc0\x68\x68\xbf\xd0\xf1\x54\x96\x09\x5f\xbf\xe2\x6a\x4a\x3b\xa2\x24\xc0\xf3\xd1\x9c\x05\x6e\x66\x8e\xcb\x22\xea\x48\x1e\xad\x5f\x40\xce\x96\x6d\x0d\xa3\xb1\x31\xe6\x2c\x51\x6e\xcf\xc1\xb4\xf2\x30\xb7\x5b\xfd\xc9\x74\x22\x79\x44\xcd\xdc\x06\xad\xa8\x4f\x3d\x2a\x59\xb0\x00\x12\xac\x21\x23\xc3\x33\xa0\x3e\x39\x27\x27\x62\xd3\x68\x44\xfe\x2e\x99\x4a\x6f\xd6\x94\xc6\x08\xaa\xcd\x64\x14\x9a\xbb\xa8\xa1\xd0\x42\x6d\xb5\xcc\x64\x6e\xd1\xd0\x87\xd2\xc2\xd9\xa8\xf9\x8d\xfc\xfa\x67\xa8\xe8\x46\xa0\xb8\x4b\xba\x20\xb3\xb5\xa4\x02\x04\x0b\x9c\xfc\xe4\x39\x27\xcc\x13\x7a\xcb\x29\x10\xed\x91\x68\x41\xe1\x64\x2d\x69\x72\xee\x13\x79\x4b\x7a\xe6\x71\x67\x25\xa6\x92\x4f\xfd\x54\x9a\x6e\x50\x3f\x83\x9e\xeb\x42\x07\x01\x5c\x44\xe0\xf2\xe4\x20\x51\x22\x97\x34\xa2\x7b\x02\x02\x0e\x2e\x75\x98\x4f\x3c\x88\xa8\xa4\x81\x92\x86\xcf\x8c\xc6\xe5\x89\xce\xfd\xd6\xfe\xfe\xbe\xd5\x81\x1f\xe0\x97\xce\x11\xb4\x11\xab\x1f\x26\x1f\x4d\xc4\xef\xcd\x66\x32\x05\x56\xc2\x50\xea\x95\x2f\xa8\x6e\x4d\xa6\xd6\x9c\xe1\x79\x04\x8d\xd5\x7d\x03\x16\xa8\x68\x1a\x0d\x65\xb2\xa2\xec\x7e\x76\x63\xb0\x05\x60\x06\x80\xaf\x20\xa8\x0b\x36\x85\x3d\xd1\x6e\xb4\x7e\x68\xb7\x17\x7b\x9f\x13\x75\x9f\x6b\x7c\x06\x2b\x97\xf3\x19\xed\x28\x4d\x66\xff\xf2\x4c\x87\x53\xed\x0d\xd5\x2a\x62\xd4\x4d\xda\xad\x91\x1a\x4d\x63\x4f\x85\x64\xbe\x82\x53\xc6\xe9\xcd\xe4\xfa\xea\x52\x87\x62\x6f\x0f\x97\xe5\x77\x90\x6f\xe7\x4a\xa1\x34\xd3\x45\x59\xe4\x32\x75\x2f\xc5\x7a\xa8\x10\x6f\x7c\x33\x5f\xe9\x56\xb1\x84\x55\xb7\x59\x6a\x96\xbe\xa1\x00\xeb\x61\xab\x50\x6e\xc0\x16\x91\x93\x74\x7d\x8a\xcb\xdb\x84\xac\x93\x6f\x5a\x0f\x85\x6c\xb3\x31\xc1\x9e\x0b\x38\x7f\x3d\xf9\x11\xbf\x90\x68\x21\xc0\xb4\x1d\x70\xba\xcf\x7f\x3e\x20\xdd\xce\xf3\x03\xda\xed\x3c\x47\x22\xdd\x3c\xbb\xe9\x8f\xdf\x81\xf5\x50\x70\x6c\x53\xb7\xac\xa9\x27\x68\x23\xb7\xd8\x27\x2b\xba\x5c\xcf\x22\xe6\xee\xb0\x3a\x69\xc9\xd9\xba\xc1\x6f\xef\x30\x74\x39\x17\x60\xf3\xba\x2d\x56\xf2\xb5\x10\x29\x1e\xdc\xd2\x48\x96\xad\xb7\xf9\xed\x4e\x29\x5b\x8e\x54\x31\xd0\x54\x7b\xde\xad\x4e\x79\x92\x34\xce\x92\x93\x92\x9e\x22\x57\x2d\x36\xe2\xc8\x98\x78\x6a\x81\x19\x55\x44\xf5\x39\xdd\x19\x35\xba\x3f\xeb\xe4\xa0\x57\x6d\xd2\x29\xd2\xdb\x65\x0e\x33\xb6\x58\xd0\x68\xd7\x9a\xe9\xc0\x27\x4c\x3a\x1f\xe0\xbb\xda\xe5\x99\xf8\x60\xa6\x54\x3b\x9e\x83\xbd\x90\x5b\xcf\xf2\xd5\x58\x75\x65\x87\x94\x24\x30\x03\xbd\x95\xb4\x33\x85\x0e\xa5\xe0\x51\xec\x50\x7d\x93\x50\xdd\x55\x55\xa8\x9f\x6d\x2b\x04\x1d\x0c\xb3\x86\x69\x3d\x7c\x57\xa5\xfa\xf0\x6f\x9f\x70\xde\x5c\x8e\xe0\x4d\x0d\xd5\x84\x7a\x8b\xc9\x62\x9f\x30\xe2\xdb\x98\xd7\xda\xa7\xf7\x61\xb4\x1d\x87\x1f\xc1\x2a\x48\x6f\xa2\xc2\x80\xa2\xb3\x75\x4e\x94\xe0\xfe\x23\x6e\x94\xe8\xbe\xdd\x91\x32\xdb\xff\x9f\x2b\x86\xae\x1b\xba\x6a\x88\x90\xa8\xfa\x19\x15\xa7\x2f\xa2\xba\xae\x8a\xad\x95\xbd\x5b\xd9\xd1\x61\x13\x25\x8f\xa9\xbe\xb6\x4a\xeb\xab\x12\x9d\x74\x19\x50\x9d\x8c\xe7\x73\x23\xdd\xc8\x11\x4d\x92\x67\x6d\xca\xdb\x91\x57\x77\xd4\x5b\x75\x95\x00\x4c\x26\x05\xfd\x12\x7f\xd6\x14\xf4\xcb\xab\x9b\x51\x02\x61\xdb\xbf\xa9\xb4\x24\xda\x95\x8c\x84\xd2\x64\xb4\x86\x38\xd0\x32\x5d\x7f\x81\x9b\x93\x49\xb8\x23\x42\xeb\xa1\x2e\x84\x11\xbd\x65\x3c\x16\xde\x1a\xf6\x69\x6b\xd1\x02\x17\xc1\x38\x0f\x69\x94\x91\xb8\xfe\xe2\x20\xbd\x88\xa1\x2e\x90\x30\x54\x18\x6e\xce\xa3\x05\x97\xea\xce\x26\x48\xad\x6e\x1a\xe9\x89\xc3\xdf\x61\x78\x7f\xf0\x9b\x06\x92\xd6\x7e\xde\x03\x9f\x73\xf8\x0a\x74\x11\xd1\x10\x6c\xdb\xe1\x1e\x8f\xba\x01\xbd\xa5\x11\xec\xfd\x87\xc2\xa9\x7b\x49\x91\xed\xfc\x09\x5f\x81\xdc\xad\x60\xef\x21\x8c\x58\x20\xc1\xea\x6c\xf6\x9a\x46\x8e\xf0\x1e\xb2\xb8\x68\x64\x93\xaa\x70\xa9\xba\x00\xc2\x90\x27\xfa\x31\x3e\x85\x10\x97\x00\x5f\x26\xa4\xd6\xdc\xe4\x32\xc9\x8e\x28\x71\xef\x22\x26\x29\xd8\x01\xbf\xa5\x11\x9b\xaf\xf1\x1b\x89\x25\xe7\x21\x0d\xea\x52\xf8\xff\xc5\xc9\x14\x42\xde\x32\x47\x5f\x69\xbf\x50\xbd\x73\x2b\xb5\x50\x63\xe1\xe2\xe6\xae\x74\x48\xcd\x32\x18\x3d\xe5\xe1\x1a\xe7\xa7\xd0\x79\x55\xaf\x01\xe0\x24\x15\x30\x73\x16\x8b\x76\xa1\xfb\xaa\x00\xb4\xbf\x72\x59\xb4\x93\xc2\x68\x38\x61\x8d\x0d\xbb\xe8\xdb\xb5\xfd\xdc\x0c\x7b\x94\x72\x56\xa5\x11\x55\xf1\xcb\x27\x2b\x74\xab\xee\xb2\x12\x27\xd9\xcc\x90\x60\x6a\x86\xd1\xf0\x02\x04\x73\xed\x12\x69\xd1\xce\xe2\x83\x5a\x93\x92\x96\xdc\xe3\x96\xd4\x5e\x6a\xee\x36\xc7\x6c\x5f\xb0\x59\x44\xa2\x75\x3b\x63\x2c\x47\x2f\x1f\xae\x33\xa9\xda\xec\xdf\x31\xfb\x85\x77\x16\x74\x97\x7d\x6f\x8b\x73\x4f\x2f\x09\x35\x9d\x5b\x52\xcb\xf3\xa9\x33\xd1\xb0\xf0\x8e\xc4\x84\xca\xd7\x28\xd6\x76\x80\x39\xc1\xe9\x13\xe4\x75\xb3\xbd\xab\xcc\x96\xfd\x48\x10\x08\xba\x20\xb4\xbd\xdf\x5c\x86\xb5\xa0\x5d\x55\xd7\x68\xa0\xe7\x36\xd9\x4d\x51\xf2\xa9\x40\x94\x34\xd7\x52\x31\x59\xd9\xfa\xf6\x12\x5c\xef\xa2\xc2\xcf\x3b\x9d\xdc\x59\xa4\x4b\x6e\xd6\xd4\xe4\x2d\x47\x6b\x68\xea\x5c\x2d\x75\x12\xb7\x9c\x7d\x06\x51\x1c\x60\xc9\xf0\xa8\x3e\xe1\x1b\xb8\x7d\x07\xfa\x28\xdf\xb5\xf6\xfd\x95\xa4\x7e\x08\xb6\x4c\x41\xa9\xbf\x68\x49\x3f\x6c\xbd\xcf\xfe\x35\x0b\x27\xb5\x82\x9c\xe4\xb2\x59\x9f\xd9\x9e\x6e\x02\x34\x1c\x22\x0b\x1d\x80\x36\x6a\xf5\x88\xa4\xad\x82\x48\xdc\x8b\x9e\xa0\x09\xf1\xcb\x97\xb0\x37\xb8\x9a\xec\x19\x8d\xc6\x33\x48\x44\x5f\x0c\x47\x83\x69\xc1\x81\xe9\xdb\x8b\xde\xe9\xe0\x5c\x85\xc0\x18\x5c\x4d\x8c\xc6\x9c\xe1\x91\x2e\x41\xbe\x85\xe6\x5c\xd5\x9e\x6d\x4f\xf2\x73\xa4\x29\xda\xef\x86\xa3\xf7\x6d\x4b\xfd\x5d\x98\xf9\xd8\xef\x6a\xec\xf7\xd2\xd8\x3b\x35\xf6\xae\x34\x76\xae\xc6\xce\xf3\xb1\xad\x5b\xb7\x52\xbe\x4d\x86\x32\xea\xc7\x2f\xd0\xda\xd6\x13\xcf\x33\x39\xd9\x5d\x58\xdb\xca\xbf\x66\x4f\xb3\x9b\xaf\xb6\x95\x7f\x5d\x60\x91\x0c\x69\xe4\x81\x1d\x52\x40\xb2\x4a\x87\xb9\x6d\x55\x07\xca\x2c\xa6\x68\x67\x77\x22\x6d\x2b\xff\xba\x45\xb5\x7d\x73\xd1\xb6\x6a\xc6\xb6\xf8\x4a\x97\x4f\x6d\xab\xfc\xd3\x84\x57\xba\x40\x25\x0b\xc4\x34\x1a\xc2\xa3\x34\x84\x23\x78\x06\x21\x89\x85\x7a\xeb\xe4\x8e\x47\x2b\xa2\x4b\x2e\x77\x1c\x22\x34\x5a\x35\x4f\x49\xf0\xdf\xff\xf9\x5f\x12\x16\x54\x2a\xd4\x64\xc2\xbe\xdd\xf9\xdb\xd1\xaf\x4d\x60\x42\xc4\x54\xe4\x6f\x19\x8c\xe3\x20\xc0\x94\xd0\xcb\x57\xd1\x0b\x68\xc7\x22\x52\x2f\x2e\x72\x41\xf4\x18\x7c\xc4\xbd\x9c\x5b\xb3\xf9\x68\xaa\xa1\x22\x4c\x54\x57\xa6\xfb\x35\xbc\x15\x56\x73\xfb\xc4\xfb\xf5\x2b\xe2\xc9\x0f\x1f\xc0\xb4\xfe\xd5\x04\x3b\xa0\xb8\xc0\x93\x15\x0e\xda\xd0\xd7\x84\x21\x64\x8c\x8a\xf6\x4e\xf4\x66\x3b\x7e\x14\x9c\x25\x57\x60\xcf\x7f\x3e\x86\x39\x6b\x66\x0d\x34\x1e\xd0\x4c\x98\x3a\xab\xe5\x01\xd0\x09\x51\x47\xfb\xe7\xa4\x83\x56\x9a\x09\x9d\x8e\xd4\x3b\x47\x22\x8e\x28\x30\xa9\x7a\x4b\x12\xa7\xc3\x73\x41\x41\x39\x32\xf3\xd2\x56\xda\x6b\x76\x8f\x5a\x42\x1a\xf9\x4c\xe0\x14\xe9\x94\xeb\x2c\x7d\xee\x82\x3d\x9e\xc3\x82\xdb\x77\x5b\x90\xb3\xd0\x58\xc5\xf8\xa8\x0b\xc7\x82\xed\xf3\x6d\xa1\x66\x66\x15\x3a\x24\x79\x98\xbe\xc4\xa6\x40\x24\x93\x82\x7a\x73\xe0\x81\x46\xe3\x2f\xbe\xa1\x11\xa3\xd5\x9d\x78\x54\xa8\xd6\x9d\x90\x24\x92\x14\x01\x99\x7a\x01\x44\xbd\x96\x94\x74\x60\x4a\xa6\xdb\x36\x2a\xac\x7d\xb6\x25\x73\xce\x02\x26\x96\x28\x54\x27\x4c\xfd\x78\xb2\x62\x61\xa8\x20\x65\x4a\xc7\x83\xf4\xb5\x94\xbf\x86\x51\x9e\x81\xa4\x9e\xa7\x02\x92\x00\x14\xb9\x24\x78\xbe\x80\x25\x11\x40\x74\x63\x2c\x7d\x89\x89\x48\x19\xb1\x59\x2c\x69\x01\x6d\x10\x28\x41\x8d\x74\xf2\x93\x83\xca\x93\x87\x94\xc7\x8f\x0d\xcf\xd4\x3b\x36\x11\x06\xb3\xd4\x7b\x4d\x06\x1f\x91\x97\x76\x7c\x6a\x4f\x8a\x35\xe7\x85\xb4\x33\x64\x3d\xe8\xcb\x97\x0d\x58\x0f\xe9\x35\xca\xa6\xd0\x26\xc2\x59\x6a\x97\xda\xfe\x8f\xb5\x74\xf1\x84\x1c\x2c\x60\x70\x73\xd1\x2b\x1c\x91\xd5\xc2\x4a\x5a\x32\x0f\xd9\x4d\x2b\x1a\x41\xaa\x23\xdf\x75\xc1\xb4\x71\x89\xdb\x5b\x2d\xee\x5a\xd9\xa6\x61\xa8\x9b\xad\xde\xf8\xac\x8b\xe9\xa6\xa4\x2a\xbd\xf2\xca\x34\x15\x06\x6a\x15\xe5\xa2\xf4\x1b\x4c\x45\x0e\x55\x80\xbf\x05\x0e\x60\x76\x4b\xb0\xc0\xa6\xed\xfa\x0b\x3b\x79\x33\xb0\x15\xae\xcd\x9d\x51\xad\xc6\x41\x6b\xee\x8d\xcf\x36\x19\x72\x08\xd7\x72\xc9\x03\xb0\xff\x17\x32\xe0\xe5\x4b\xbb\x1e\x71\x5c\x0c\x4f\x07\xa3\xc9\xa0\x16\x6d\x64\xcd\xd9\x34\x9e\xf9\x6d\x77\x16\xd1\xd2\x50\xb7\x0b\x9d\xea\xac\x61\x16\x14\x54\xaa\xad\xb0\x57\xb9\x41\xdf\x83\xe4\xbd\x61\xf5\x9e\xa4\x76\xf3\x19\x38\x4b\xea\xac\x30\xfd\xa7\x4b\x3b\xb9\x38\x11\x50\x61\x47\xe2\xf4\x52\xe5\x8e\x08\x88\xa8\xcf\x6f\xf5\x4b\xd8\x3e\x71\xae\x26\xd0\x39\x6c\x75\x7e\x41\xaa\xa5\x94\xa1\x78\xd1\x6e\x2f\x98\x5c\xc6\xb3\x96\xc3\xfd\x36\x09\xdc\x88\xae\x6f\x99\x6c\xe7\xef\xbd\xb7\x75\x31\x6c\xff\xed\xb9\x9a\xe8\xbc\x89\x50\x52\x0b\xfa\x02\xf0\x55\x9e\x8d\x8f\x0a\xdf\x8d\x46\xb2\x0c\x76\x72\xaf\xa9\xd8\xbd\xb9\xd2\xc9\xd6\xc1\xcb\x92\x05\xa7\xba\x9e\xa4\xee\x56\x84\xb6\x60\xc4\x25\x4d\xfb\x2f\xf5\x71\x68\x99\xd9\xa4\x26\x55\x23\x7f\x89\x11\x31\xb5\x69\x24\xef\xc5\xfd\x4f\x00\x00\x00\xff\xff\xcc\xca\xc0\x81\xa4\x30\x00\x00")

func createDmgBytes() ([]byte, error) {
	return bindataRead(
		_createDmg,
		"create-dmg",
	)
}

func createDmg() (*asset, error) {
	bytes, err := createDmgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "create-dmg", size: 12452, mode: os.FileMode(0755), modTime: time.Unix(1572713988, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb, 0xe0, 0xd5, 0xb4, 0xd, 0x7e, 0xb6, 0xd, 0x8c, 0x18, 0x4d, 0xa9, 0x78, 0x75, 0xff, 0xc5, 0xce, 0x51, 0x0, 0xf5, 0xb6, 0x8d, 0xce, 0xbb, 0x9b, 0xfe, 0xeb, 0x29, 0xc, 0x81, 0xf6, 0x1a}}
	return a, nil
}

var _sample = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xc1\x6a\xeb\x30\x10\x45\xf7\xfe\x8a\x79\x0a\x64\xf5\x64\x3b\xa1\x2d\xe9\xb2\xb4\x50\xba\xe8\xaa\x5b\x43\x90\xa5\x49\x32\x44\x99\x11\x92\x9c\x94\x7e\x7d\x51\x4c\x1a\x17\x9a\xed\xd1\xb9\x57\x97\x99\xfd\x6b\x7a\xe2\xa6\x37\x69\x57\x55\x33\xf8\x20\xb6\x08\x36\xa2\xc9\xa8\xdd\x61\x0b\x4e\x30\x01\x4b\x06\x39\x62\x8c\xe4\xf0\x3f\xf4\x08\x69\x88\x08\x59\xc0\xa1\xc7\x8c\x10\x22\x1e\x49\x86\x04\x2f\xef\xaf\x55\xc6\x94\x41\x6f\xe0\x29\x04\x4f\xd6\x64\x12\xd6\x6f\x9c\xb2\xf1\x1e\x63\x5d\x3a\xe7\x73\x88\x87\xdb\xef\x65\xc7\xf3\x79\x01\xe4\x1d\x9e\x3b\xeb\x66\x32\xa9\xab\xb4\x3e\x8a\x67\x73\x40\x50\x93\x16\xf8\x69\x51\x17\x87\xac\x30\x28\x73\x75\xba\x75\x41\x35\x59\x4e\xa3\xd4\x1b\xbb\xdf\x46\x19\xd8\x81\xa2\x4b\xbe\x5b\x5f\x71\x1d\x78\x3b\xaa\x27\x62\x27\x27\x1d\x24\xc1\xb2\x6d\x61\xb1\x6c\xa7\x38\xd1\x17\xc2\xaa\x6d\xe1\xae\x1d\x79\xf9\x68\xa4\x8b\x09\xf9\xb5\xb8\x36\x21\xa8\xb1\xec\x71\x54\x76\xe4\x50\xe3\x67\x46\x4e\xf4\xa7\x5c\x24\x13\x82\x76\x51\x82\xf6\xc4\x7b\x78\x28\xf1\xd5\x3d\x74\x95\xba\x79\xd2\x92\x53\x49\x86\x68\x71\xbd\x11\xef\x30\x36\xea\x3b\x00\x00\xff\xff\x9a\x7a\xc8\xda\xfa\x01\x00\x00")

func sampleBytes() ([]byte, error) {
	return bindataRead(
		_sample,
		"sample",
	)
}

func sample() (*asset, error) {
	bytes, err := sampleBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sample", size: 506, mode: os.FileMode(0755), modTime: time.Unix(1572713988, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x91, 0x1c, 0xb9, 0x55, 0x14, 0xb0, 0xf9, 0x4, 0x58, 0xe0, 0x6e, 0x5f, 0x8, 0x9e, 0xf7, 0x7c, 0xb6, 0xff, 0xb3, 0x84, 0x4f, 0xce, 0xe, 0x94, 0xbc, 0x12, 0x67, 0x8f, 0x6f, 0x8d, 0x3, 0x46}}
	return a, nil
}

var _supportBrewMeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\x4f\x6f\xaa\x40\x14\xc5\xf7\xf7\x53\xdc\x37\xf2\x32\xfa\x7c\x80\xac\x1b\x4d\xd4\x92\x94\x84\x50\x82\x26\xdd\x34\x21\x23\x4c\x94\x74\xc0\x09\x33\x56\x1b\xeb\x77\x6f\x44\x51\xfc\xd3\x2e\xba\xbc\x87\x73\x38\xf7\x77\xa7\xf5\xc7\x9e\x65\x85\x3d\x63\x6a\x01\xd0\xc2\xd1\xaa\x48\x05\x47\xb5\x92\x72\x59\x6a\x54\x49\x99\x49\xad\x50\x2f\x31\x67\x59\x71\x9c\x01\x92\x14\x89\xb1\xed\xfd\xb5\xff\xed\x08\xc0\x41\xed\x53\xcb\xb2\x93\x92\x33\xcd\xcd\x34\x9f\xd3\xa3\x1c\xcf\x4a\xbe\xbe\xfa\x66\xee\x35\x0a\x4c\x4a\xc1\xeb\xb0\xe6\xb9\x14\x4c\x73\xab\xa1\x52\x10\x59\xc2\x0b\x75\x32\xed\xb3\x47\xc9\x92\x1f\x14\x80\x29\xd1\x37\xda\x6c\xfd\x86\xc4\x1e\x45\xee\x4b\xec\x05\xbe\x17\xb8\xf1\x30\x0c\x7d\x77\x32\x8e\xbc\x70\x1a\x87\xfe\x70\xec\x3e\x3d\xfb\x8f\x6e\x64\x6f\x51\x96\x59\xa1\x31\x88\x1e\x90\x6f\x32\x8d\x3b\x82\xc4\x38\xfc\x9e\x74\x40\xf1\x14\xcd\x02\x9d\xff\x46\xbb\x8d\x4c\x09\x34\xd1\xc1\x4e\x47\x9e\x3d\xf8\x89\x95\x89\x23\x55\x75\xe3\x64\x3a\xf4\xfd\x7e\xef\x72\x74\xec\x39\xc5\xc1\x29\x58\x9d\x81\x40\xc2\x34\x12\xa3\x81\x48\x70\x70\x63\x12\xdf\x40\xf9\xde\xd8\x0d\x26\xee\x2f\x80\x6a\x9c\x6e\x85\x53\xd1\x89\xbb\x74\xb7\xcb\x1c\x36\xbe\x78\x87\xfa\x08\xd4\x49\xe9\x9d\x44\xa3\x53\x9c\x3b\x5f\x8d\x9f\x7b\x20\x7f\xbf\x92\xce\x76\x48\x16\xf9\x32\xc5\xee\xa6\x21\x7d\x05\x00\x00\xff\xff\x95\x85\xa5\x4e\xb9\x02\x00\x00")

func supportBrewMeShBytes() ([]byte, error) {
	return bindataRead(
		_supportBrewMeSh,
		"support/brew-me.sh",
	)
}

func supportBrewMeSh() (*asset, error) {
	bytes, err := supportBrewMeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "support/brew-me.sh", size: 697, mode: os.FileMode(0755), modTime: time.Unix(1572713988, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa8, 0x66, 0x9f, 0xa6, 0xd9, 0xf6, 0xad, 0xa7, 0xaf, 0xb5, 0xe9, 0x58, 0x4b, 0xa1, 0xce, 0x88, 0xf1, 0xab, 0x98, 0x6f, 0x23, 0x68, 0xac, 0x34, 0x44, 0x18, 0x9b, 0x71, 0x7e, 0x94, 0xb3, 0xe5}}
	return a, nil
}

var _supportDmgLicensePy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x58\x7f\x73\xa2\xc8\xd6\xfe\x9f\x4f\x71\x96\x7d\x53\x68\x8d\x21\x88\x08\xc9\xbe\xeb\x56\x11\xc5\x09\xef\x9b\x68\x4a\xc9\xce\xce\x8e\x53\x16\x42\xa3\x7d\x07\x69\x96\x6e\x27\x63\x6e\xdd\xef\x7e\xeb\x34\x68\x40\x33\x73\xb7\xea\xfa\x87\x4a\x77\x9f\x73\x9e\xe7\x9c\xa7\x7f\xd0\x3f\xff\x74\xb5\xe3\xc5\xd5\x8a\x66\x57\x24\xfb\x0a\xf9\x5e\x6c\x58\xa6\xa8\xaa\xaa\x04\x1b\xca\x81\x47\x05\xcd\x05\x84\x71\xcc\x21\x84\x94\x46\x24\xe3\x04\x12\x9a\x12\x10\x0c\x42\x18\x3d\xbc\xd7\x61\x46\xfe\xda\xd1\x82\x70\xf8\x23\x62\x31\x81\x30\x8b\x21\x84\x3c\x0d\x69\x06\x21\x8f\x28\x05\x41\xbe\x09\xa5\x6e\xac\x2b\xd3\xd5\x57\xca\x76\x3c\xdd\x03\xcb\xd2\x3d\x14\xbb\x8c\x03\xcb\x20\x84\x87\x30\xd2\x15\x65\xc8\xf2\x7d\x41\xd7\x1b\x01\xad\x61\x1b\x4c\xa3\xdb\xbd\x34\x8d\x6e\x0f\xfe\x2f\x2c\x48\x0c\x77\x6c\xb5\xe2\x8a\xf2\x48\x8a\x2d\xe5\x9c\xb2\x0c\x28\x87\x0d\x29\xc8\x6a\x0f\xeb\x22\xcc\x04\x89\x3b\x90\x14\x84\x00\x4b\x20\xda\x84\xc5\x9a\x74\x24\xde\x6c\x0f\x39\x29\x38\xcb\x80\xad\x44\x48\x33\x9a\xad\x21\x84\x88\xe5\x7b\x85\x25\x20\x24\x63\x96\x88\xe7\xb0\xa8\x68\x70\xce\x22\x1a\x0a\x12\x43\xcc\xa2\xdd\x96\x64\x22\x14\x18\x0f\x49\x70\x68\x89\x0d\x01\x75\x5e\x59\xa8\x6d\x19\x24\x26\x61\xaa\xd0\x0c\xb0\xef\xd0\x05\xcf\x54\x6c\xd8\x4e\x40\x41\xb8\x28\x68\x84\x3e\x3a\x40\xb3\x28\xdd\xc5\x88\xe1\xd0\x9d\xd2\x2d\xad\x22\xa0\xb9\xcc\x00\x57\x04\x83\x1d\x27\x1d\x89\xb3\x03\x5b\x16\xd3\x04\x7f\x89\xa4\x95\xef\x56\x29\xe5\x9b\x0e\xc4\x14\x5d\xaf\x76\x82\x74\x80\x63\xa3\x4c\x77\x07\x79\x5c\xb1\x02\x38\x49\x53\x25\x62\x39\x25\x1c\x24\xd7\x57\x74\x72\x0c\x42\xcf\x31\xa1\xa2\x4a\x11\xc7\x96\xe7\x0d\xdb\x36\x99\x50\xae\x24\xbb\x22\xa3\x7c\x43\xa4\x4d\xcc\x80\x33\x19\xf1\x1f\x24\x12\xd8\x82\xc3\x13\x96\xa6\xec\x19\xa9\x45\x2c\x8b\x29\x32\xe2\xbf\x28\x4a\xb0\x21\x10\xae\xd8\x57\x22\xb9\x94\x05\xce\x98\xa0\x51\x99\x6e\x59\x80\xfc\xb5\xaa\x55\x17\xdf\x84\x69\x0a\x2b\x52\x25\x8c\xc4\x40\x33\x05\x9b\x0e\x74\x0a\x0c\xcf\x45\x98\x09\x1a\xa6\x90\xb3\x42\xc6\x3b\xa5\xa9\x2b\x4a\x70\xe7\xc1\x7c\x3a\x0e\x3e\xb8\x33\x0f\xfc\x39\x3c\xce\xa6\xbf\xfb\x23\x6f\x04\xaa\x3b\x07\x7f\xae\x76\xe0\x83\x1f\xdc\x4d\x9f\x02\xf8\xe0\xce\x66\xee\x24\xf8\x08\xd3\x31\xb8\x93\x8f\xf0\xff\xfe\x64\xd4\x01\xef\x8f\xc7\x99\x37\x9f\xc3\x74\xa6\xf8\x0f\x8f\xf7\xbe\x37\xea\x80\x3f\x19\xde\x3f\x8d\xfc\xc9\x7b\xb8\x7d\x0a\x60\x32\x0d\xe0\xde\x7f\xf0\x03\x6f\x04\xc1\x14\x30\x60\xe5\xca\xf7\xe6\xe8\xec\xc1\x9b\x0d\xef\xdc\x49\xe0\xde\xfa\xf7\x7e\xf0\xb1\xa3\x8c\xfd\x60\x82\x3e\xc7\xd3\x19\xb8\xf0\xe8\xce\x02\x7f\xf8\x74\xef\xce\xe0\xf1\x69\xf6\x38\x9d\x7b\xe0\x4e\x46\x30\x99\x4e\xfc\xc9\x78\xe6\x4f\xde\x7b\x0f\xde\x24\xd0\xc1\x9f\xc0\x64\x0a\xde\xef\xde\x24\x80\xf9\x9d\x7b\x7f\x8f\xa1\x14\xf7\x29\xb8\x9b\xce\x10\x1f\x0c\xa7\x8f\x1f\x67\xfe\xfb\xbb\x00\xee\xa6\xf7\x23\x6f\x36\x87\x5b\x0f\xee\x7d\xf7\xf6\xde\x2b\x43\x4d\x3e\xc2\xf0\xde\xf5\x1f\x3a\x30\x72\x1f\xdc\xf7\x9e\xb4\x9a\x06\x77\xde\x4c\xc1\x61\x25\x3a\xf8\x70\xe7\x61\x13\xc6\x73\x27\xe0\x0e\x03\x7f\x3a\x41\x1a\xc3\xe9\x24\x98\xb9\xc3\xa0\x03\xc1\x74\x16\x1c\x4d\x3f\xf8\x73\xaf\x03\xee\xcc\x9f\x63\x42\xc6\xb3\xe9\x43\x47\xc1\x74\x4e\xc7\x38\xc4\x9f\xa0\xdd\xc4\x2b\xbd\x60\xaa\xa1\x51\x91\xe9\x4c\x3e\x3f\xcd\xbd\xa3\x43\x18\x79\xee\xbd\x3f\x79\x3f\x07\x7f\xd2\x28\x9f\x2e\x17\xa9\xa4\x60\x5b\x58\x2e\x93\x9d\xd8\x15\x64\xb9\x04\xba\xc5\xea\x43\x5e\xd0\x4c\x2c\x93\x5d\x26\x67\x9a\x52\xb5\x32\x7e\xf8\xc7\xf7\xc7\xbf\x82\x6c\x73\x9c\xcd\xc7\x41\xb9\xc8\xc3\x82\x13\x45\x51\xa2\x34\xe4\x1c\x1e\x43\xb1\x69\x71\x51\xb4\x7f\x51\x00\x00\x62\x92\xc0\x72\x49\x32\x41\x8a\xe5\xb2\xc5\x49\x9a\x54\x1d\xf8\x29\x88\xd8\x15\x19\xce\xb5\x44\xa9\x8f\xfe\x46\x45\x35\xb8\x03\x62\x9f\x93\x0e\x7c\x0d\xd3\x1d\x2e\x4a\x45\x18\x91\x55\x18\x7d\xa9\x39\x61\x5c\xdf\x65\x29\xcd\xbe\x94\xde\x15\x45\x41\x2f\xdb\x2f\x88\xb4\x15\xd3\x62\x30\x61\x99\x9c\xe3\x49\x42\xbf\x0d\x34\xad\x32\x6d\x25\xb8\xe8\xd1\x94\x64\xe1\x96\xb4\x61\x70\x64\xa6\x6f\xbf\xf0\xa3\x6d\x4c\x8b\xa3\x69\xf9\xd3\x56\xaa\xa0\x51\xca\x38\x69\x25\x71\xd9\x50\x51\x91\xec\x8f\x5e\x0f\x58\x42\x9a\xb5\x58\x2e\x67\x59\x07\xc2\x62\xcd\x0f\xc9\xd9\xae\xc7\x34\x25\x9d\xe3\x4e\x31\x90\xbd\xb2\x0f\xd7\xb8\x03\x0b\x4d\xd7\xda\x10\x72\x10\xdb\x1c\xc7\xbf\x72\x97\x83\x58\x4e\xb2\x56\xd5\xd5\x01\xed\xb9\x1c\x9b\xbc\x8e\xc2\x4f\xa2\x3f\x17\x54\x90\x96\xaa\xaa\x71\x28\x42\xd0\x82\x87\xc7\x7b\x0d\x5a\x5d\xf3\xba\x03\xea\xfd\x23\x8d\xd4\x36\xfc\xf3\x68\xf2\x3f\x6a\xb7\x67\x59\x60\xf7\x6d\x1b\xec\xae\xd3\x07\x7b\xe8\x58\x60\x1a\xd6\x10\xec\xae\xed\x81\xed\x60\x5b\xd7\x76\xd4\x9a\x89\xdd\x37\x0d\xb0\x6e\x2c\x0b\x2c\xab\xef\x40\xdf\xb4\x2c\x30\xfa\x56\x0f\xec\x31\x8e\xf6\x1c\x0b\xac\xb1\xd5\xab\x9b\x58\x5e\xdf\x02\xc3\x32\x5d\x30\x5d\xf9\x65\x0d\xa1\xdf\xeb\x5b\x60\xf5\x8c\x5b\x70\x7a\xce\x0d\x38\x3d\xd3\x68\x44\x19\xda\x5d\xb0\x3d\xdb\x41\x38\x37\x60\x59\x96\x05\x7d\xa7\x6f\x82\x65\x75\x3d\xb0\x87\xf6\x18\xec\x9e\xdd\x6d\x9a\x98\x06\x38\xa6\xdd\x97\xce\x4a\x88\xa6\x61\x5e\x83\x3d\x46\x7e\xb6\xd3\x03\xbb\xef\x58\x75\x13\xd3\xb0\x6d\x34\x19\x83\x3d\x32\x0d\xe8\xf5\x7b\x06\xf4\x8c\x9e\x51\xa3\xd6\x35\x7a\x66\xc3\x64\x64\x9b\xe0\xdc\x38\x98\x36\xd3\x80\x57\x9c\x4e\x1f\xff\x39\x76\x1f\x7a\x63\xab\x11\xa5\xc2\x6d\x58\x07\xfa\xa6\x0b\xd6\xb0\xdf\x83\xbe\x65\xf5\x55\xe5\x5f\xff\xab\x28\x65\xb5\xb0\x40\x1a\xb4\xfa\x86\x61\x34\xcb\x64\x18\x86\x01\x86\x61\x98\x70\xf8\x77\xf2\x65\xc9\x7f\x75\x5f\xf3\x60\xf6\x73\xe5\xab\x03\xaa\x97\xad\x71\x43\x84\xd5\x4e\x08\x96\x71\xf5\xcc\xbd\x0d\xc6\xc8\xea\x97\x4c\xec\xa1\x8d\x05\xb1\xaf\xc1\x34\x24\x4f\xa7\x07\x8e\xd5\x6b\x24\xdb\xe8\x5b\xc8\xd6\x31\x51\x3d\x7d\x30\xae\x51\x47\x37\x98\xe2\x2e\xe6\x02\xab\x60\xf7\x8d\x7e\x23\x0d\x06\x8e\xbe\xb1\x3d\x70\x2c\xc3\x81\x7e\xcf\xee\x82\x63\xdb\x7d\x30\x3d\xd3\x03\xd3\x73\x5c\xb0\x6e\x6c\xbb\x59\x1f\xe7\xa6\xd4\x95\x69\xd8\xf5\x78\xa6\xe1\x38\x18\xcf\x02\xfb\xba\x29\x1c\xc7\xb2\xaf\xcb\xd2\x38\x16\x4a\xc1\xb4\x47\xa5\x1e\xa4\x0a\x4a\x42\xd7\xf6\x4d\xc3\xa4\x57\x16\xf2\x06\x25\x25\x25\x8c\x4a\x31\x87\x18\xb4\x77\xec\xb8\x6d\x02\x33\x4d\xb0\x6a\x54\x4d\xb3\xf2\x3d\x46\x5f\x5d\xb4\xeb\xd9\xfd\x66\x14\xa7\x77\x8c\x2f\x19\xf4\x4a\x4c\x8e\x85\x5c\xba\x92\x9a\xe9\x9d\x44\x31\x64\x4e\xa0\x91\x88\x43\x14\xcf\x1e\x83\x63\x9d\xcc\x9b\x3a\x26\x64\xe0\x1c\xe7\x84\x0c\x8f\xb0\xad\x53\xfa\xcd\xd4\x7a\xa6\xf9\xb6\x90\xcc\x57\x21\xbd\x29\x20\xe7\x5c\x40\x4d\x99\x34\x04\xf4\x1d\xc5\x40\x53\x26\x0d\x01\x9d\x29\xe6\xf6\x8d\xec\x34\xd7\x84\xef\x28\x06\x9a\x32\x69\xa4\xe3\x3b\x8a\x81\xa6\x4c\x1a\x51\x6a\x8a\x79\x23\xdf\x07\x7e\x27\xab\x68\x43\x31\x92\x6f\x0f\x1f\xbb\xf6\x10\xca\xa5\xcc\xb2\xaf\xcf\x16\x5e\xa7\x87\x8b\x95\xed\x58\xe0\x38\x98\x0d\xb3\xcc\x86\x51\x2e\x93\xb6\x7d\x32\x19\x6e\x50\x22\x72\x9d\xb2\xec\x31\x66\xc7\xc3\x3c\x59\x27\xd3\xa9\xa1\x39\x19\x5a\xd6\x40\xce\x7b\x24\x6d\x9a\x67\xb5\x3a\xe7\xe2\xa1\x68\x16\xd9\x22\x53\x55\xb5\xdd\xd8\x95\x5e\xf7\xaf\xe3\xf9\x5b\x2b\xca\xfd\x2b\x6d\xee\x5f\xf8\xf9\x42\xb3\x18\x06\xa0\xcd\x82\x31\x68\x40\x93\xc3\xb6\xa9\xa7\xec\x99\x14\xad\xb6\x4e\xb2\x98\xa3\xcb\x96\xa6\x17\x22\xd1\xda\x40\x52\x4e\x40\x0b\xbc\x3f\x02\xed\xcc\xdb\x61\x47\xd4\xa4\x98\x17\xda\x05\x5f\x9c\xad\x8a\x28\xe6\x45\xa6\xc1\x85\x8c\xdd\x3e\xf3\x81\xbb\x3b\xe1\x51\x98\x93\x16\x6f\x9f\x03\x86\xda\x19\x47\xc7\xd7\x8d\xbc\xd5\xd6\x0b\x92\xa7\x61\x44\x5a\xda\x62\xa1\x75\x40\x5b\x2c\x16\x0b\xad\xd6\xaa\x96\x8d\x6a\xbd\x6d\x61\x60\xa3\xd6\x56\xce\x49\xb0\x02\x52\x9a\xe1\x59\xff\xad\x8c\xe1\x47\x76\x0f\x0e\x30\xf1\xe9\x9c\x47\xdd\x55\x81\xbe\x3e\xe1\xbf\x4f\xf4\x17\xfa\xae\x6b\x18\xc6\x67\xd9\x49\xb1\xa3\x08\xb3\x35\x69\x19\x1d\x48\x65\xd1\x32\xd2\xee\x00\x0e\x69\x7f\x7e\x3b\x7a\x23\xd3\xf8\xa0\x6a\xf0\xae\x8a\xf3\x0e\x34\x75\x91\x69\xdf\x81\x73\x66\xa4\x2d\x16\xd9\xdb\xe3\x8f\x63\x4b\x99\x9d\x8c\x38\x3b\xfa\x70\xb1\x4f\xdf\x2c\x75\x73\xdd\xea\x35\x37\xd2\x21\x7e\xdd\x80\x61\x74\xad\xd7\x0e\xf5\x8d\xad\xb8\xf9\x65\x3a\x27\xc6\x0d\x93\xee\x9b\x7b\xf6\xab\xb1\x2b\x8d\x4f\xa2\x9c\x82\x38\xf9\x2a\x67\x5b\x63\xae\x31\xae\xf3\x3d\x9e\x6a\x5b\xda\x26\xa6\x3b\x41\x53\xd8\x65\x49\x1a\x0a\x41\x32\xb8\xfc\x6b\x47\x89\x00\xf5\x82\xab\xa8\xf4\xea\x50\xda\xae\x9f\xd2\x61\x50\x77\x71\xc1\xe1\x32\x04\xfc\x66\x07\xab\xef\xd6\xfe\x70\xee\xd5\x0b\xf2\xd2\x81\xe3\x29\xf5\x10\xe4\x87\x10\xff\x2e\x40\x9a\xc0\x21\x4a\xc4\xb6\x79\x41\x8e\x97\x1c\x19\x13\x80\xc7\xff\xa6\x36\x6b\xa1\xa2\x1c\x79\x5c\x70\x1d\xcf\xd9\x7a\xbc\x5d\x63\x80\xd6\xf1\x5c\x7e\x0e\xb3\xb2\x2f\xc8\x96\x7d\x25\xad\x33\x28\x3f\x80\x33\x18\x80\xba\x7a\x31\xd5\xf3\x79\xf2\x06\xf5\x88\x65\x5f\x49\x21\xea\xc8\xe0\x32\x61\xc5\x36\x14\xf0\x34\xba\xfd\x13\x53\x7f\xc1\x7f\x94\x78\xf8\x8f\x34\x48\xfa\x03\xa4\xeb\x97\xff\x1e\x68\xad\x58\xf0\xee\x07\x40\xb5\xa7\xd1\x9f\x53\xb8\xa4\xdb\x70\x4d\xbe\x90\x3d\xbc\xa4\x74\x75\x19\x93\xaf\x24\x1d\xdc\x1c\x89\x9e\x97\xbd\x59\x0a\xed\xa4\x88\x8d\xe1\x34\x29\x55\x3c\x00\xe3\x95\x95\x7c\xeb\x6d\xa9\xf3\x5d\x14\x11\xce\x93\x5d\x9a\xee\x21\x8c\x63\x12\x1f\x5f\xc7\x04\x03\xed\x82\x6b\xea\xa9\x3b\xdc\x56\xce\xfc\x8c\x43\x9a\x96\x77\x3c\x61\xfc\x63\x17\x0a\xc5\xb7\x5c\x7c\x43\x5c\x2e\x11\x93\xb6\x5c\xe2\x2b\xe2\x72\xa9\x95\x4e\xe5\x0b\x75\x81\x73\xae\x7a\xb9\xd6\xa7\xb2\x4a\x8f\xb2\xbd\xd5\xae\x0d\xd2\x39\x11\xcb\x1d\x0f\xd7\x72\x79\xbb\xc8\x0b\xb6\x86\x5f\xab\x40\xbf\xc1\xaf\x15\x8a\xf2\xe9\xd3\xf4\x31\xf0\xa7\x93\xf9\x67\x05\x40\xde\x56\xe2\xe8\x22\xdc\x1e\xae\x2b\x8f\x57\x79\x07\xec\xe1\xba\x20\x64\x4b\x32\x71\xbc\xbc\xac\x6e\x23\x01\x7c\x01\xc5\xf9\x35\x26\xa1\x62\x43\x8a\x37\x6e\x33\x9b\x48\x14\x00\x86\xa3\xea\x8d\xb8\x61\xff\x56\x9e\x07\xc4\x86\x00\x6e\xf1\x11\xcb\x04\xc9\x04\xd7\x71\xdb\x9b\x13\x02\x97\x97\x1b\x92\xe6\x72\x2f\xda\xb2\x82\x40\x4c\x44\x48\x53\xae\x1f\x97\xba\x2a\x27\x61\x1c\x2f\x4b\x5d\xb7\x8e\x45\xd2\x2e\x2f\x0b\xf2\xa2\x75\x6a\x0d\x45\xed\x29\x94\x37\x1f\x03\x8d\x0b\x56\x90\x5a\x7b\x4c\x92\x70\x97\x8a\x81\x76\xe5\xe6\x79\x4a\x23\x79\xd9\xc8\xaf\x24\x65\x3d\xcc\xf3\xab\x61\x05\xf2\x6a\x84\x7a\x65\x39\x29\xae\x02\xc6\x52\x7e\x35\x6b\x44\x43\xe0\x03\x2d\xd8\x10\xc8\x43\xa4\x58\x5e\xfb\xcd\xc8\x0b\x08\xc6\x52\x1d\x46\x65\x1c\x79\x89\x78\x51\x05\x2d\x8f\x2c\x7f\x87\x59\x6d\xf2\x36\x18\x46\x7f\x83\x61\xb4\x61\x34\x22\x7c\xf0\x49\x5b\xbd\x98\x78\xcc\x58\xbf\x68\x9f\xcf\x13\x20\x2f\x51\x4e\xe8\x94\xaa\x0c\x71\xde\x1c\x10\xa0\xc8\x61\xc7\x69\xb6\x06\x9e\x93\x88\x26\x94\xc4\x50\x5f\x5b\xc4\x3e\x27\x3a\x9c\x9c\xc6\xb4\x61\x09\x02\x50\x7d\xab\x17\x53\x8a\x69\xfd\xa2\xd7\x33\xd0\xb8\x3f\x81\xc1\x21\x23\xf2\x67\x89\x6d\xd5\xbc\x88\x98\x3c\x24\xe2\xf1\x44\xde\xb4\xc0\x4f\x03\x30\x0f\x8b\x00\xee\x07\x8c\xeb\x58\x03\x9d\x7c\xa3\x5c\xf0\xfa\xfe\xd4\x3e\x9d\xd3\xda\xeb\x9c\x4e\xf0\xec\x89\xf5\x0a\xcb\x8d\xe8\xa7\xf2\x58\x58\xb7\x7e\x4d\x69\x09\x21\x28\x76\xe4\x10\x18\x9b\x6a\xde\x2b\xec\xf2\xda\xad\x9c\xbd\xaf\xd6\x7c\xcf\x11\x9b\x68\x75\xcb\xb6\x37\x6e\x8f\x94\x7f\x07\x00\x00\xff\xff\x3b\x35\x17\x24\x87\x18\x00\x00")

func supportDmgLicensePyBytes() ([]byte, error) {
	return bindataRead(
		_supportDmgLicensePy,
		"support/dmg-license.py",
	)
}

func supportDmgLicensePy() (*asset, error) {
	bytes, err := supportDmgLicensePyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "support/dmg-license.py", size: 6279, mode: os.FileMode(0755), modTime: time.Unix(1572713988, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x92, 0x57, 0x1, 0x75, 0x33, 0x67, 0x1c, 0x68, 0xcd, 0x94, 0xb9, 0xc3, 0x14, 0x1, 0x14, 0x28, 0xc6, 0x85, 0x6c, 0xa6, 0x69, 0x32, 0x4d, 0x38, 0x46, 0x50, 0x79, 0x1, 0x1c, 0xe0, 0x9d, 0x4}}
	return a, nil
}

var _supportTemplateApplescript = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x5b\x6f\xda\x4c\x10\x7d\x36\xbf\x62\x64\x7d\x8a\x82\x12\x72\xd1\xf7\x58\x55\x15\x01\x12\xac\x52\x20\x40\x1a\x68\x53\xa1\xc5\x1e\xcc\x34\x66\x17\xed\xae\xa1\x17\xe5\xbf\x57\xb3\xc0\x62\x48\x5a\xe5\xa5\xea\x83\x25\xef\x9c\xb9\x9c\x39\xb3\x3b\x4a\x82\xce\x25\x1c\x2f\x55\x96\xcf\xb1\x2d\xe6\x58\x2e\x05\x16\xb3\x0c\xc4\x62\x91\x51\x2c\x2c\x29\x09\xe1\x35\xc9\x04\x75\x58\x0a\xd6\x58\x42\xe6\xb1\x18\x03\xc2\x80\xb1\x9a\x64\x5a\x2e\x05\x41\xa0\x16\x28\x4b\xfc\x63\xd0\x82\x9d\xe1\xb0\xa3\x29\x25\x09\x56\xc1\x7d\xd4\x1e\x16\x90\xd1\x1e\x32\x2a\x20\xf7\x94\xd8\xd9\xc6\x7e\x5f\xb0\x37\x91\xd2\x99\xdd\x00\xcd\x62\x95\x2b\x65\xad\x9a\xf7\x18\x1e\x32\x7e\x5c\xa8\x7c\xe2\x53\x96\x5f\x8e\x18\x6d\x23\x46\xc5\x88\x75\x31\x1f\x92\x98\xbe\x55\x1a\xd9\x35\x7c\x08\x43\x38\x82\xf0\xfc\xa3\x13\xc1\x9c\xf3\xa9\x20\x08\x43\xce\xe1\xac\xde\x1f\xf7\x07\x9d\x5e\xe3\x21\x0c\x1d\x5b\x27\x60\xac\xa4\x15\x24\x51\xc3\x8a\x64\xa2\x56\x0c\xb8\x12\x71\xae\x35\x4a\x0b\x4b\xc2\x15\xd7\xa1\x58\x49\x77\xf0\x1e\x56\xa9\x6c\x22\x34\x2c\xc9\xd0\x24\x73\x64\xa6\x22\x33\xe8\x1d\x8c\x15\x36\x37\x7f\x74\xb1\x33\x84\x89\xca\x65\x62\x18\xfb\xb9\x13\xea\xb4\x30\x94\xd3\x43\x51\x0f\x0d\xa3\xa7\xd7\xd6\xec\x35\xba\x9d\x7e\x34\x88\x3a\xed\x71\x33\xaa\xd7\x1b\xed\xf1\x75\xd4\x6a\xf4\xc7\xb5\x56\xf5\xae\xdf\x60\x17\x94\x09\xb0\x32\x7e\xa0\x6a\x61\x1d\x39\xa6\xea\x45\x60\x2b\x29\x69\x40\x4d\x5f\x94\xd0\x69\xcb\x91\x9e\x98\x0b\x35\xf4\xc3\x11\x8a\x6a\x9d\xf6\xb8\x1f\x7d\x6a\xec\x84\xc0\x6f\xd6\xc3\x83\xc6\x70\xb0\x0f\x0b\xad\x85\x4c\x71\xce\x13\xb1\x0a\xa4\xf2\xa6\x64\x8f\x74\x10\x04\x57\xd5\xda\xfb\x9b\x5e\xe7\xae\x5d\xdf\x76\xc5\xd6\x4a\x05\xba\xca\x10\x93\x26\x99\xb2\xc5\x0b\xb1\xef\xd5\xa4\x64\xe3\xd0\x8c\xea\x51\xfb\xe6\x00\xae\x16\x1e\xa3\x90\x09\xdc\xb6\xa0\x45\xf2\x11\x6a\x99\xc8\x0d\xba\x76\xab\xdd\x6e\x2b\xaa\x55\x8b\xb9\x83\x20\xb8\x6d\x15\x0e\x71\xa6\xd6\x03\x71\x0f\x74\x9d\xf9\x5a\xe9\x18\xc1\x88\x25\xc9\x94\x65\x65\xbd\x59\x10\x86\x13\xcc\xc4\x77\xb8\x7c\xc5\xb5\xfd\x6b\x77\x0e\x2a\x70\x79\xf1\xec\xe2\x39\xeb\xd3\xc1\x08\x8a\x57\xa8\xc0\xfc\x35\x0b\xeb\x1f\x35\xf7\xf2\x83\xfa\x4d\x4b\x95\x4a\x4a\x4b\x74\x95\xa6\x6e\x1b\x83\x51\x73\x04\x4b\x73\xc7\x67\xa5\xc9\xae\x51\xb7\x71\xdc\x9e\x9a\x52\x86\x5e\x8c\xff\x39\x09\x73\x5d\x09\xb2\x83\x4d\xd4\xc5\xc6\x86\x5f\x31\xb6\x1f\xf6\x1a\xd3\xb8\x40\x61\x61\x35\xa3\x0c\x3d\x4e\x66\xd7\xf8\x56\xe3\xe0\x79\x5a\xff\x7f\xb2\xc6\xf9\xa3\x29\x1c\x27\x0a\xcc\x8c\xb5\x36\xb1\xa6\x85\x85\xf0\x33\x54\xa6\xc0\x7b\x72\xbb\x5a\x8f\x20\x84\x2f\x6f\x00\xe3\x99\x82\xff\xde\x85\x65\x78\x0b\xe1\x45\xc8\x7d\x49\x38\x20\x6a\x75\x8e\x1b\x8d\xd6\x5c\x4b\x41\x90\xa9\x14\x42\xae\x8e\x89\x4b\xeb\x89\x70\x5e\x83\xb1\xe2\x09\x4d\x95\x06\xbf\x96\x39\xd3\x04\x21\xd6\x28\x2c\x26\x67\x61\x69\x27\xba\xcb\x9c\xcb\xd2\xaf\x00\x00\x00\xff\xff\x0f\x5d\x68\x15\x24\x07\x00\x00")

func supportTemplateApplescriptBytes() ([]byte, error) {
	return bindataRead(
		_supportTemplateApplescript,
		"support/template.applescript",
	)
}

func supportTemplateApplescript() (*asset, error) {
	bytes, err := supportTemplateApplescriptBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "support/template.applescript", size: 1828, mode: os.FileMode(0644), modTime: time.Unix(1572713988, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x13, 0x72, 0x7c, 0x79, 0x30, 0xc5, 0xb, 0xe6, 0x39, 0xa1, 0xeb, 0x19, 0x1e, 0x89, 0x3f, 0x1e, 0xbc, 0x72, 0xc2, 0x70, 0x26, 0x8d, 0x46, 0x11, 0x39, 0x1b, 0x41, 0x41, 0xa, 0x3e, 0x86, 0x2a}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"LICENSE":                      license,
	"README.md":                    readmeMd,
	"builder/create-dmg.builder":   builderCreateDmgBuilder,
	"create-dmg":                   createDmg,
	"sample":                       sample,
	"support/brew-me.sh":           supportBrewMeSh,
	"support/dmg-license.py":       supportDmgLicensePy,
	"support/template.applescript": supportTemplateApplescript,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"LICENSE":   &bintree{license, map[string]*bintree{}},
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"builder": &bintree{nil, map[string]*bintree{
		"create-dmg.builder": &bintree{builderCreateDmgBuilder, map[string]*bintree{}},
	}},
	"create-dmg": &bintree{createDmg, map[string]*bintree{}},
	"sample":     &bintree{sample, map[string]*bintree{}},
	"support": &bintree{nil, map[string]*bintree{
		"brew-me.sh":           &bintree{supportBrewMeSh, map[string]*bintree{}},
		"dmg-license.py":       &bintree{supportDmgLicensePy, map[string]*bintree{}},
		"template.applescript": &bintree{supportTemplateApplescript, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
